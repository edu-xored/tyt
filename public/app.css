@import url("https://fonts.googleapis.com/css?family=PT+Sans:400,700");

form {
	width: 100%;
}

label {
	display: block;
	font-size: 14px;
	font-weight: 400;
	color:#fff;
	text-align: center;
}

.container {
	box-shadow: 0 5px 20px #000;
	max-width: 440px;
	border-radius:8px;
	position: relative;
	border-style: solid;
	border-width: thin;
	border-color: #fff;
	background-color: rgba(0,0,0, 0.5)
}

.edu-copyright {
		color:#888;
		text-align:center;
		padding: 0;
		margin: 20px 0;
		position: relative;
}

#edu-stat-link {
}

.greeting {
	margin: 20px auto;
	font-size: 2em;
	color:#fff;
	text-align: center;
}

#message {
	height: 150px;
	resize: vertical;
}

.form-control {
	margin:0;
	background-color: transparent;
	border-style: solid;
	border-color: #fff;
}

#duration-dropdown {
	display: block;
	text-align: center;
}

#duration-dropdown .dropdown-menu {
	left: 30%;
}

.lecture-info {
	display: none;
}

.lecture-label {
	color: white;
	font-size: 14px;
	margin: 0.5em 0;
	text-align: center;
}

.lecture-title {
	color: white;
	font-size: 20px;
	font-weight: bold;
	margin: 0.5em 0;
	text-align: center;
}

.btn.btn-lecture-date {
	display: block;
	width: 100%;
	border: 1px solid #E02926;
	background: transparent;
	color: white;
	font-size: 14px;
	font-weight: bold;
	cursor: default;
	padding: 0.75em 0;
}

.btn.btn-here {
	display: block;
	width: 100%;
	background: olivedrab;
	color: white;
	font-size: 14px;
	font-weight: bold;
	padding: 0.75em 0;
}

.form-login {
	max-width: 330px;
	padding: 15px;
	margin: 0 auto;
}

.github-login {
	width: 120px;
	padding-top: -20px;
}

.login-header {
	font-weight: 700;
	font-size: 2.5em;
	margin:0 0 20px 0;
	color:#fff;
}

.body-login {
	font-family: "PT Sans", sans-serif;
	background-color: #fff;
	padding: 40px 20px;
}

.btn-login {
	width:280px;
	height:40px;
	font-size:2em;
	vertical-align:center;
	margin-left:10px;
}

.highcharts-credits {
	display: none;
}


.btn-social{position:relative;padding-left:44px;font-weight:400; text-align:center;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.btn-social>:first-child{position:absolute;left:0;top:0;bottom:0;width:32px;line-height:34px;font-size:1.4em;text-align:center;border-right:1px solid rgba(0,0,0,0.2)}
.btn-social.btn-lg{padding-left:61px}.btn-social.btn-lg>:first-child{line-height:45px;width:45px;font-size:1.4em}

.soc-btn-bg {
	padding:5px;
	background-image: url("img/GitHub-Mark-Light-32px.png");
	background-position: center;
	background-repeat: no-repeat;
}

.btn-github{color:#fff;background-color:#444;border-color:rgba(0,0,0,0.2)}.btn-github:focus,.btn-github.focus{color:#fff;background-color:#2b2b2b;border-color:rgba(0,0,0,0.2)}
.btn-github:hover{color:#fff;background-color:#2b2b2b;border-color:rgba(0,0,0,0.2)}
.btn-github:active,.btn-github.active,.open>.dropdown-toggle.btn-github{color:#fff;background-color:#2b2b2b;border-color:rgba(0,0,0,0.2)}.btn-github:active:hover,.btn-github.active:hover,.open>.dropdown-toggle.btn-github:hover,.btn-github:active:focus,.btn-github.active:focus,.open>.dropdown-toggle.btn-github:focus,.btn-github:active.focus,.btn-github.active.focus,.open>.dropdown-toggle.btn-github.focus{color:#fff;background-color:#191919;border-color:rgba(0,0,0,0.2)}
.btn-github:active,.btn-github.active,.open>.dropdown-toggle.btn-github{background-image:none}
.btn-github.disabled:hover,.btn-github[disabled]:hover,fieldset[disabled] .btn-github:hover,.btn-github.disabled:focus,.btn-github[disabled]:focus,fieldset[disabled] .btn-github:focus,.btn-github.disabled.focus,.btn-github[disabled].focus,fieldset[disabled] .btn-github.focus{background-color:#444;border-color:rgba(0,0,0,0.2)}
.btn-github .badge{color:#444;background-color:#fff}

.hello-world {
	position: fixed;
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
	font-family: monospace;
	font-size: 1.1em;
	line-height: 1.75em;
	text-align: left;
	color: rgba(255, 255, 255, 0.1);
	z-index: 0;
	height: 100%;
	background-color:#111;
	overflow: hidden;
}

.hello-world::before {
    content: 'echo "Hello World"   PRINT "Hello, world!"​   #include int main(void) {puts("Hello, world!");}   #include int main() {std::cout &lt;&lt; "Hello, world!"; return 0;}   using System; class Program {public static void Main(string[] args) {Console.WriteLine("Hello, world!");}}   ? "Hello World"   console.log "Hello, world!"   program HelloWorld; begin Writeln("Hello, world!"); end.   Hello World!   import javax.swing.JFrame; import javax.swing.JLabel; public class HelloWorld {public static void main(String[] args) {JFrame frame = new JFrame(); frame.setTitle("Hi!"); frame.add(new JLabel("Hello, world!")); frame.pack(); frame.setLocationRelativeTo(null); frame.setVisible(true);}}   document.write("Hello, world!");   $("body").append("Hello world!");   println("Hello world!")   print [Hello, world!]   disp("Hello, world!")   #import #import int main(void) {NSLog(@"Hello, world!"); return 0;}   program HelloWorld; begin WriteLn("Hello, world!"); end.   print "Hello, world!";   void setup() {println("Hello, world!");}   print "Hello, world!"   cat("Hello, world!")   puts "Hello, world!"   println("Hello, world!")   Module Module1 Sub Main() Console.WriteLine("Hello, world!") End Sub End Module   Hello World   echo "Hello World"   PRINT "Hello, world!"​   #include int main(void) {puts("Hello, world!");}   #include int main() {std::cout &lt;&lt; "Hello, world!"; return 0;}   using System; class Program {public static void Main(string[] args) {Console.WriteLine("Hello, world!");}}   ? "Hello World"   console.log "Hello, world!"   program HelloWorld; begin Writeln("Hello, world!"); end.   Hello World!   import javax.swing.JFrame; import javax.swing.JLabel; public class HelloWorld {public static void main(String[] args) {JFrame frame = new JFrame(); frame.setTitle("Hi!"); frame.add(new JLabel("Hello, world!")); frame.pack(); frame.setLocationRelativeTo(null); frame.setVisible(true);}}   document.write("Hello, world!");   $("body").append("Hello world!");   println("Hello world!")   print [Hello, world!]   disp("Hello, world!")   #import #import int main(void) {NSLog(@"Hello, world!"); return 0;}   program HelloWorld; begin WriteLn("Hello, world!"); end.   print "Hello, world!";   void setup() {println("Hello, world!");}   print "Hello, world!"   cat("Hello, world!")   puts "Hello, world!"   println("Hello, world!")   Module Module1 Sub Main() Console.WriteLine("Hello, world!") End Sub End Module   Hello World   echo "Hello World"   PRINT "Hello, world!"​   #include int main(void) {puts("Hello, world!");}   #include int main() {std::cout &lt;&lt; "Hello, world!"; return 0;}   using System; class Program {public static void Main(string[] args) {Console.WriteLine("Hello, world!");}}   ? "Hello World"   console.log "Hello, world!"   program HelloWorld; begin Writeln("Hello, world!"); end.   Hello World!   import javax.swing.JFrame; import javax.swing.JLabel; public class HelloWorld {public static void main(String[] args) {JFrame frame = new JFrame(); frame.setTitle("Hi!"); frame.add(new JLabel("Hello, world!")); frame.pack(); frame.setLocationRelativeTo(null); frame.setVisible(true);}}   document.write("Hello, world!");   $("body").append("Hello world!");   println("Hello world!")   print [Hello, world!]   disp("Hello, world!")   #import #import int main(void) {NSLog(@"Hello, world!"); return 0;}   program HelloWorld; begin WriteLn("Hello, world!"); end.   print "Hello, world!";   void setup() {println("Hello, world!");}   print "Hello, world!"   cat("Hello, world!")   puts "Hello, world!"   println("Hello, world!")   Module Module1 Sub Main() Console.WriteLine("Hello, world!") End Sub End Module   Hello World   echo "Hello World"   PRINT "Hello, world!"​   #include int main(void) {puts("Hello, world!");}   #include int main() {std::cout &lt;&lt; "Hello, world!"; return 0;}   using System; class Program {public static void Main(string[] args) {Console.WriteLine("Hello, world!");}}   ? "Hello World"   console.log "Hello, world!"   program HelloWorld; begin Writeln("Hello, world!"); end.   Hello World!   import javax.swing.JFrame; import javax.swing.JLabel; public class HelloWorld {public static void main(String[] args) {JFrame frame = new JFrame(); frame.setTitle("Hi!"); frame.add(new JLabel("Hello, world!")); frame.pack(); frame.setLocationRelativeTo(null); frame.setVisible(true);}}   document.write("Hello, world!");   $("body").append("Hello world!");   println("Hello world!")   print [Hello, world!]   disp("Hello, world!")   #import #import int main(void) {NSLog(@"Hello, world!"); return 0;}   program HelloWorld; begin WriteLn("Hello, world!"); end.   print "Hello, world!";   void setup() {println("Hello, world!");}   print "Hello, world!"   cat("Hello, world!")   puts "Hello, world!"   println("Hello, world!")   Module Module1 Sub Main() Console.WriteLine("Hello, world!") End Sub End Module   Hello World   echo "Hello World"   PRINT "Hello, world!"​   #include int main(void) {puts("Hello, world!");}   #include int main() {std::cout &lt;&lt; "Hello, world!"; return 0;}   using System; class Program {public static void Main(string[] args) {Console.WriteLine("Hello, world!");}}   ? "Hello World"   console.log "Hello, world!"   program HelloWorld; begin Writeln("Hello, world!"); end.   Hello World!   import javax.swing.JFrame; import javax.swing.JLabel; public class HelloWorld {public static void main(String[] args) {JFrame frame = new JFrame(); frame.setTitle("Hi!"); frame.add(new JLabel("Hello, world!")); frame.pack(); frame.setLocationRelativeTo(null); frame.setVisible(true);}}   document.write("Hello, world!");   $("body").append("Hello world!");   println("Hello world!")   print [Hello, world!]   disp("Hello, world!")   #import #import int main(void) {NSLog(@"Hello, world!"); return 0;}   program HelloWorld; begin WriteLn("Hello, world!"); end.   print "Hello, world!";   void setup() {println("Hello, world!");}   print "Hello, world!"   cat("Hello, world!")   puts "Hello, world!"   println("Hello, world!")   Module Module1 Sub Main() Console.WriteLine("Hello, world!") End Sub End Module   Hello World   echo "Hello World"   PRINT "Hello, world!"​   #include int main(void) {puts("Hello, world!");}   #include int main() {std::cout &lt;&lt; "Hello, world!"; return 0;}   using System; class Program {public static void Main(string[] args) {Console.WriteLine("Hello, world!");}}   ? "Hello World"   console.log "Hello, world!"   program HelloWorld; begin Writeln("Hello, world!"); end.   Hello World!   import javax.swing.JFrame; import javax.swing.JLabel; public class HelloWorld {public static void main(String[] args) {JFrame frame = new JFrame(); frame.setTitle("Hi!"); frame.add(new JLabel("Hello, world!")); frame.pack(); frame.setLocationRelativeTo(null); frame.setVisible(true);}}   document.write("Hello, world!");   $("body").append("Hello world!");   println("Hello world!")   print [Hello, world!]   disp("Hello, world!")   #import #import int main(void) {NSLog(@"Hello, world!"); return 0;}   program HelloWorld; begin WriteLn("Hello, world!"); end.   print "Hello, world!";   void setup() {println("Hello, world!");}   print "Hello, world!"   cat("Hello, world!")   puts "Hello, world!"   println("Hello, world!")   Module Module1 Sub Main() Console.WriteLine("Hello, world!") End Sub End Module   Hello World   echo "Hello World"   PRINT "Hello, world!"​   #include int main(void) {puts("Hello, world!");}   #include int main() {std::cout &lt;&lt; "Hello, world!"; return 0;}   using System; class Program {public static void Main(string[] args) {Console.WriteLine("Hello, world!");}}   ? "Hello World"   console.log "Hello, world!"   program HelloWorld; begin Writeln("Hello, world!"); end.   Hello World!   import javax.swing.JFrame; import javax.swing.JLabel; public class HelloWorld {public static void main(String[] args) {JFrame frame = new JFrame(); frame.setTitle("Hi!"); frame.add(new JLabel("Hello, world!")); frame.pack(); frame.setLocationRelativeTo(null); frame.setVisible(true);}}   document.write("Hello, world!");   $("body").append("Hello world!");   println("Hello world!")   print [Hello, world!]   disp("Hello, world!")   #import #import int main(void) {NSLog(@"Hello, world!"); return 0;}   program HelloWorld; begin WriteLn("Hello, world!"); end.   print "Hello, world!";   void setup() {println("Hello, world!");}   print "Hello, world!"   cat("Hello, world!")   puts "Hello, world!"   println("Hello, world!")   Module Module1 Sub Main() Console.WriteLine("Hello, world!") End Sub End Module   Hello World   echo "Hello World"   PRINT "Hello, world!"​   #include int main(void) {puts("Hello, world!");}   #include int main() {std::cout &lt;&lt; "Hello, world!"; return 0;}   using System; class Program {public static void Main(string[] args) {Console.WriteLine("Hello, world!");}}   ? "Hello World"   console.log "Hello, world!"   program HelloWorld; begin Writeln("Hello, world!"); end.   Hello World!   import javax.swing.JFrame; import javax.swing.JLabel; public class HelloWorld {public static void main(String[] args) {JFrame frame = new JFrame(); frame.setTitle("Hi!"); frame.add(new JLabel("Hello, world!")); frame.pack(); frame.setLocationRelativeTo(null); frame.setVisible(true);}}   document.write("Hello, world!");   $("body").append("Hello world!");   println("Hello world!")   print [Hello, world!]   disp("Hello, world!")   #import #import int main(void) {NSLog(@"Hello, world!"); return 0;}   program HelloWorld; begin WriteLn("Hello, world!"); end.   print "Hello, world!";   void setup() {println("Hello, world!");}   print "Hello, world!"   cat("Hello, world!")   puts "Hello, world!"   println("Hello, world!")   Module Module1 Sub Main() Console.WriteLine("Hello, world!") End Sub End Module   Hello World   echo "Hello World"   PRINT "Hello, world!"​   #include int main(void) {puts("Hello, world!");}   #include int main() {std::cout &lt;&lt; "Hello, world!"; return 0;}   using System; class Program {public static void Main(string[] args) {Console.WriteLine("Hello, world!");}}   ? "Hello World"   console.log "Hello, world!"   program HelloWorld; begin Writeln("Hello, world!"); end.   Hello World!   import javax.swing.JFrame; import javax.swing.JLabel; public class HelloWorld {public static void main(String[] args) {JFrame frame = new JFrame(); frame.setTitle("Hi!"); frame.add(new JLabel("Hello, world!")); frame.pack(); frame.setLocationRelativeTo(null); frame.setVisible(true);}}   document.write("Hello, world!");   $("body").append("Hello world!");   println("Hello world!")   print [Hello, world!]   disp("Hello, world!")   #import #import int main(void) {NSLog(@"Hello, world!"); return 0;}   program HelloWorld; begin WriteLn("Hello, world!"); end.   print "Hello, world!";   void setup() {println("Hello, world!");}   print "Hello, world!"   cat("Hello, world!")   puts "Hello, world!"   println("Hello, world!")   Module Module1 Sub Main() Console.WriteLine("Hello, world!") End Sub End Module   Hello World   echo "Hello World"   PRINT "Hello, world!"​   #include int main(void) {puts("Hello, world!");}   #include int main() {std::cout &lt;&lt; "Hello, world!"; return 0;}   using System; class Program {public static void Main(string[] args) {Console.WriteLine("Hello, world!");}}   ? "Hello World"   console.log "Hello, world!"   program HelloWorld; begin Writeln("Hello, world!"); end.   Hello World!   import javax.swing.JFrame; import javax.swing.JLabel; public class HelloWorld {public static void main(String[] args) {JFrame frame = new JFrame(); frame.setTitle("Hi!"); frame.add(new JLabel("Hello, world!")); frame.pack(); frame.setLocationRelativeTo(null); frame.setVisible(true);}}   document.write("Hello, world!");   $("body").append("Hello world!");   println("Hello world!")   print [Hello, world!]   disp("Hello, world!")   #import #import int main(void) {NSLog(@"Hello, world!"); return 0;}   program HelloWorld; begin WriteLn("Hello, world!"); end.   print "Hello, world!";   void setup() {println("Hello, world!");}   print "Hello, world!"   cat("Hello, world!")   puts "Hello, world!"   println("Hello, world!")   Module Module1 Sub Main() Console.WriteLine("Hello, world!") End Sub End Module   Hello World   echo "Hello World"   PRINT "Hello, world!"​   #include int main(void) {puts("Hello, world!");}   #include int main() {std::cout &lt;&lt; "Hello, world!"; return 0;}   using System; class Program {public static void Main(string[] args) {Console.WriteLine("Hello, world!");}}   ? "Hello World"   console.log "Hello, world!"   program HelloWorld; begin Writeln("Hello, world!"); end.   Hello World!   import javax.swing.JFrame; import javax.swing.JLabel; public class HelloWorld {public static void main(String[] args) {JFrame frame = new JFrame(); frame.setTitle("Hi!"); frame.add(new JLabel("Hello, world!")); frame.pack(); frame.setLocationRelativeTo(null); frame.setVisible(true);}}   document.write("Hello, world!");   $("body").append("Hello world!");   println("Hello world!")   print [Hello, world!]   disp("Hello, world!")   #import #import int main(void) {NSLog(@"Hello, world!"); return 0;}   program HelloWorld; begin WriteLn("Hello, world!"); end.   print "Hello, world!";   void setup() {println("Hello, world!");}   print "Hello, world!"   cat("Hello, world!")   puts "Hello, world!"   println("Hello, world!")   Module Module1 Sub Main() Console.WriteLine("Hello, world!") End Sub End Module   Hello World   echo "Hello World"   PRINT "Hello, world!"​   #include int main(void) {puts("Hello, world!");}   #include int main() {std::cout &lt;&lt; "Hello, world!"; return 0;}   using System; class Program {public static void Main(string[] args) {Console.WriteLine("Hello, world!");}}   ? "Hello World"   console.log "Hello, world!"   program HelloWorld; begin Writeln("Hello, world!"); end.   Hello World!   import javax.swing.JFrame; import javax.swing.JLabel; public class HelloWorld {public static void main(String[] args) {JFrame frame = new JFrame(); frame.setTitle("Hi!"); frame.add(new JLabel("Hello, world!")); frame.pack(); frame.setLocationRelativeTo(null); frame.setVisible(true);}}   document.write("Hello, world!");   $("body").append("Hello world!");   println("Hello world!")   print [Hello, world!]   disp("Hello, world!")   #import #import int main(void) {NSLog(@"Hello, world!"); return 0;}   program HelloWorld; begin WriteLn("Hello, world!"); end.   print "Hello, world!";   void setup() {println("Hello, world!");}   print "Hello, world!"   cat("Hello, world!")   puts "Hello, world!"   println("Hello, world!")   Module Module1 Sub Main() Console.WriteLine("Hello, world!") End Sub End Module   Hello ;'
}

#users-statistics {
	margin-bottom: 20px;
}